#include <Wire.h>
#include <U8g2lib.h>

// 使用更省内存的 Page-by-page 模式
U8G2_SSD1306_128X64_NONAME_1_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

// 引脚定义
const int buttonSelectPin = 7;
const int buttonConfirmPin = 11;
const int buzzerPin = 13;

// 枚举与变量
enum Unit { CM, INCH };
Unit currentUnit = CM;
int valueCM = 2;             // 设置下限为 2cm
float valueIN = 0.79;        // 对应下限为 2cm
int menuIndex = 0;
const int MENU_COUNT = 3;
bool confirmed = false;

// 去抖动变量
bool lastSelectState = HIGH;
bool lastConfirmState = HIGH;
unsigned long lastDebounceTimeSelect = 0;
unsigned long lastDebounceTimeConfirm = 0;
const unsigned long debounceDelay = 50;

void beep(int duration) {
  tone(buzzerPin, 1000);
  delay(duration);
  noTone(buzzerPin);
}

// OLED 更新函数
void updateDisplay() {
  u8g2.firstPage();
  do {
    u8g2.setFont(u8g2_font_6x12_tr);

    u8g2.setCursor(0, 14);
    u8g2.print(menuIndex == 0 ? "> " : "  ");
    u8g2.print("Unit: ");
    u8g2.println(currentUnit == CM ? "cm" : "in");

    u8g2.setCursor(0, 30);
    u8g2.print(menuIndex == 1 ? "> " : "  ");
    u8g2.print("Value: ");
    if (currentUnit == CM)
      u8g2.println(valueCM);
    else
      u8g2.println(valueIN, 2);

    u8g2.setCursor(0, 46);
    u8g2.print(menuIndex == 2 ? "> " : "  ");
    u8g2.println("Confirm");

    // 对勾图标（确认成功）
    if (confirmed) {
      u8g2.setFont(u8g2_font_open_iconic_check_2x_t);
      u8g2.drawGlyph(90, 55, 0x0042);  // 大号对勾位置
    }
  } while (u8g2.nextPage());
}

void setup() {
  pinMode(buttonSelectPin, INPUT_PULLUP);
  pinMode(buttonConfirmPin, INPUT_PULLUP);
  pinMode(buzzerPin, OUTPUT);

  u8g2.begin();
  updateDisplay();
}

void loop() {
  int readingSelect = digitalRead(buttonSelectPin);
  if (readingSelect != lastSelectState && (millis() - lastDebounceTimeSelect) > debounceDelay) {
    lastDebounceTimeSelect = millis();
    if (readingSelect == LOW) {
      menuIndex = (menuIndex + 1) % MENU_COUNT;
      beep(100);
      updateDisplay();
    }
  }
  lastSelectState = readingSelect;

  int readingConfirm = digitalRead(buttonConfirmPin);
  if (readingConfirm != lastConfirmState && (millis() - lastDebounceTimeConfirm) > debounceDelay) {
    lastDebounceTimeConfirm = millis();
    if (readingConfirm == LOW) {
      if (menuIndex == 0) {
        currentUnit = (currentUnit == CM) ? INCH : CM;
        confirmed = false;
        beep(100);
      } else if (menuIndex == 1) {
        if (currentUnit == CM && valueCM < 12) {
          valueCM++;
          if (valueCM < 2) valueCM = 2;
          confirmed = false;
          beep(100);
        } else if (currentUnit == INCH && valueIN < 4.72) {
          valueIN += 0.1;
          if (valueIN < 0.79) valueIN = 0.79;
          confirmed = false;
          beep(100);
        }
      } else if (menuIndex == 2) {
        beep(500);
        confirmed = true;
      }
      updateDisplay();
    }
  }
  lastConfirmState = readingConfirm;

  delay(10);
}