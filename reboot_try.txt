# reboot_handler.py
import os
import socket
from http.server import BaseHTTPRequestHandler, HTTPServer

class RebootHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        if self.path == '/reboot':
            print("Received reboot request")
            self.send_response(200)
            self.end_headers()
            self.wfile.write(b'Rebooting...')
            os.system("sleep 2 && sudo reboot &")

        elif self.path == '/shutdown':
            print("Received shutdown request")
            self.send_response(200)
            self.end_headers()
            self.wfile.write(b'Shutting down...')
            os.system("sleep 2 && sudo shutdown -h now &")

        elif self.path == '/cancel-reboot':
            self.send_response(200)
            self.end_headers()
            self.wfile.write(b'Cancelled')

        else:
            self.send_response(404)
            self.end_headers()
            self.wfile.write(b'Not Found')

    def do_GET(self):
        if self.path == '/get-ip':
            ip = self.get_ip_address()
            self.send_response(200)
            self.send_header('Content-Type', 'text/plain')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(ip.encode('utf-8'))
        else:
            self.send_response(404)
            self.end_headers()

    def get_ip_address(self):
        try:
            # 获取实际的局域网IP（例如 192.168.x.x 或 172.x.x.x）
            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            s.connect(("8.8.8.8", 80))
            ip = s.getsockname()[0]
            s.close()
        except Exception:
            ip = "127.0.0.1"
        return ip

def run(server_class=HTTPServer, handler_class=RebootHandler, port=9090):
    server_address = ('', port)
    httpd = server_class(server_address, handler_class)
    print(f'Reboot handler running on port {port}...')
    httpd.serve_forever()

if __name__ == '__main__':
    run()
